#include "Map.h"
#include "TextureController.h"
#include "GenerateMap.h"

int world[64][64] = {  //matrix for the world but will be read from a database in the future
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,3,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,3,3,0,2,0,0,0,0,3,0,0,0,0,0,3,2,3,2,0,0,3,0,0,0,3,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,2,1},
{1,0,0,0,2,2,0,0,3,2,2,2,0,2,0,0,2,2,3,0,3,2,0,0,0,0,0,2,3,0,0,3,2,0,0,0,2,0,0,0,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,2,0,0,2,0,2,2,0,1},
{1,0,2,2,0,0,0,0,2,0,3,0,2,0,0,0,0,0,0,0,0,0,2,0,2,2,0,0,2,2,0,3,0,2,0,0,0,2,2,0,0,0,0,3,0,0,2,3,0,3,2,0,2,2,0,0,0,3,0,2,0,0,0,1},
{1,0,0,0,0,0,0,2,2,3,0,3,0,0,3,3,0,0,0,2,0,0,0,0,2,2,0,0,2,0,2,0,3,0,2,0,0,0,0,0,0,0,3,2,3,0,0,0,0,0,0,0,0,2,3,0,3,3,0,0,2,0,2,1},
{1,0,2,0,2,2,0,2,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,3,2,0,2,0,2,0,0,3,0,0,2,0,3,0,3,0,0,0,3,3,0,0,0,0,0,0,2,3,0,0,3,3,0,2,0,0,0,1},
{1,0,3,3,0,0,2,0,2,3,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,3,0,0,0,2,0,0,3,3,0,0,0,3,3,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,3,2,2,2,0,3,0,0,0,0,0,2,0,0,2,2,0,0,0,0,0,3,0,0,3,2,0,0,0,1},
{1,0,0,2,2,0,0,3,3,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,2,0,0,2,2,0,0,0,2,0,2,3,2,2,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,3,2,0,0,2,2,0,0,0,3,0,0,0,2,0,0,0,0,2,2,3,0,2,0,0,0,0,0,0,3,0,0,0,3,0,3,0,2,0,0,3,2,0,0,2,2,0,3,0,2,0,0,0,1},
{1,0,2,0,0,0,2,0,0,3,0,0,3,2,0,0,0,0,3,0,0,0,0,0,0,2,0,3,0,3,2,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,0,2,1},
{1,2,0,0,0,0,0,0,3,3,2,0,0,0,3,2,0,0,1,0,0,3,2,2,2,0,2,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,3,0,0,0,0,2,0,3,0,3,0,0,3,1},
{1,0,0,0,0,0,0,0,2,3,0,2,0,0,1,0,0,0,0,2,0,0,2,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,2,0,0,0,0,2,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,2,2,1},
{1,2,0,0,3,2,2,0,0,0,2,0,0,3,0,3,0,0,0,2,2,0,0,0,3,0,2,0,0,0,0,0,2,2,0,2,0,2,3,0,3,0,0,2,0,0,2,0,0,0,2,0,3,0,0,0,0,0,0,2,0,2,0,1},
{1,2,0,0,2,0,0,0,0,2,0,3,0,3,0,3,0,0,0,0,0,0,0,0,2,0,0,2,1,3,0,0,0,3,0,3,3,0,2,0,0,0,0,0,3,0,0,3,0,0,0,0,0,2,0,0,0,3,0,0,0,0,2,1},
{1,0,0,0,0,0,3,0,0,2,2,0,3,3,0,0,0,2,0,0,0,2,2,0,2,0,2,2,0,3,0,0,0,2,2,0,3,0,1,0,3,3,0,3,0,2,0,2,3,0,2,0,2,0,0,0,0,0,3,0,0,0,2,1},
{1,0,0,0,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,2,2,0,0,3,0,3,0,0,2,0,0,0,0,3,0,0,2,3,0,0,0,0,0,3,2,0,0,0,0,3,0,0,3,0,3,0,0,0,2,0,1},
{1,0,0,3,2,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,2,0,2,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,3,2,0,0,0,0,2,0,0,3,0,2,2,2,3,0,0,2,0,2,0,0,0,2,1},
{1,0,0,0,0,0,0,3,0,3,0,2,0,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,0,2,2,0,3,0,2,2,0,0,2,0,0,2,0,0,0,0,3,3,3,0,0,0,3,2,0,3,0,0,3,0,0,1},
{1,2,0,3,0,0,0,3,2,2,0,0,0,2,3,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,2,3,0,2,3,0,0,0,0,2,3,0,0,0,2,0,0,2,0,2,0,0,0,0,0,0,3,0,3,1},
{1,2,2,3,0,2,0,0,3,2,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,2,0,0,0,0,2,0,1,0,0,0,3,0,3,2,0,2,0,1},
{1,0,0,2,2,2,3,2,0,0,2,0,2,2,1,3,0,0,3,2,0,0,0,0,2,0,2,0,0,2,0,0,0,0,2,0,0,0,0,2,2,0,0,3,2,3,0,0,2,0,0,0,3,2,0,0,0,3,0,1,0,3,0,1},
{1,0,2,0,0,0,0,2,2,0,0,0,0,2,2,0,2,2,0,0,0,2,3,0,0,0,1,0,2,0,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,3,3,2,0,0,0,0,3,0,0,0,0,2,0,3,0,1},
{1,2,3,2,0,0,0,0,0,0,2,3,0,0,3,0,0,3,0,0,3,0,0,0,0,1,2,2,0,0,0,2,0,0,0,2,3,0,3,0,2,0,0,0,0,0,0,3,0,2,3,3,3,0,0,2,2,0,0,0,0,3,0,1},
{1,3,2,0,0,0,3,2,3,2,0,2,2,0,3,0,2,2,0,0,3,0,2,0,0,3,0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,0,0,1,2,0,2,0,0,2,0,0,0,0,0,0,0,2,0,0,3,0,2,1},
{1,0,3,0,3,0,0,0,0,0,3,0,0,2,0,0,3,2,0,0,0,0,0,3,0,0,0,0,3,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,3,0,0,2,3,0,3,0,0,0,1},
{1,2,0,2,0,0,0,3,0,3,0,0,2,0,3,2,2,0,0,0,0,2,0,3,0,0,0,0,3,2,0,0,0,0,0,0,0,0,2,3,2,0,0,0,0,0,0,3,2,0,0,2,0,0,0,3,0,0,0,2,0,3,0,1},
{1,3,2,0,2,0,0,0,0,0,0,0,0,0,0,3,0,3,0,0,2,3,0,2,0,2,0,0,0,2,2,0,0,3,0,0,2,0,2,0,2,2,2,2,0,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1},
{1,1,3,2,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,3,0,0,0,2,0,2,0,2,0,0,0,0,3,0,0,1},
{1,3,2,0,1,0,2,0,0,0,0,3,0,0,2,2,0,0,0,0,0,0,0,3,0,3,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,2,0,2,3,2,2,0,2,0,0,2,0,1},
{1,0,2,0,3,0,0,3,2,0,0,1,0,2,2,0,0,3,2,0,0,3,3,0,0,0,0,0,0,1,2,0,0,0,0,2,3,0,0,2,0,3,2,0,2,0,0,0,0,3,0,2,0,1,0,0,0,2,0,0,0,0,0,1},
{1,0,0,0,3,3,0,2,0,3,2,0,0,3,3,0,3,0,3,3,0,0,1,2,3,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,3,0,0,0,3,0,0,0,2,2,0,1},
{1,3,0,0,0,0,3,0,0,2,0,0,0,3,3,0,0,0,0,0,3,2,0,0,0,0,2,0,2,2,2,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,3,3,2,0,3,2,2,2,0,2,0,0,0,0,0,0,2,1},
{1,0,0,0,0,0,0,0,0,0,2,0,2,3,0,0,0,0,0,0,0,0,0,2,2,0,2,0,3,0,0,0,2,0,0,3,0,2,0,0,0,2,0,0,0,0,3,0,0,2,0,0,3,0,0,0,0,2,0,2,0,0,0,1},
{1,2,2,0,2,0,0,0,0,2,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,3,3,0,2,2,0,3,3,0,0,0,3,2,2,2,0,3,0,0,0,0,2,2,2,3,0,0,2,0,0,3,0,2,0,3,1},
{1,2,0,2,0,3,2,3,2,0,0,2,2,0,0,1,2,0,0,2,2,3,2,2,3,2,3,0,3,2,0,1,0,2,0,0,2,2,0,0,3,0,0,0,0,0,0,0,2,2,3,0,2,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,2,0,2,0,0,2,0,0,0,3,0,0,0,0,3,3,0,2,0,0,3,0,0,0,0,3,2,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,3,0,3,3,0,0,0,0,0,0,0,0,1},
{1,3,0,0,0,0,0,0,0,2,3,3,2,0,2,0,0,0,0,3,0,3,0,2,0,0,2,2,0,0,0,0,2,0,0,0,0,0,0,0,2,2,3,0,0,0,0,0,2,0,0,0,0,3,0,0,0,0,2,2,0,0,0,1},
{1,0,0,0,0,3,0,0,3,3,0,2,0,2,2,2,0,0,3,2,3,3,2,2,0,3,0,2,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,0,3,0,0,0,0,0,2,0,2,2,0,0,2,0,0,2,0,2,1},
{1,0,3,3,0,0,2,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,3,2,0,3,0,0,0,0,0,0,0,0,2,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1},
{1,0,0,3,0,0,2,0,0,0,2,0,2,0,0,0,3,3,0,0,0,0,0,3,0,2,0,0,0,2,0,2,0,3,0,2,0,0,2,2,0,3,3,0,2,0,3,0,0,3,2,3,0,3,2,0,0,0,0,2,0,0,0,1},
{1,3,0,2,3,0,0,0,3,0,0,0,0,0,3,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,2,0,0,0,2,3,0,0,0,0,3,2,0,0,2,0,0,2,2,3,0,0,0,0,2,0,0,0,0,1,0,0,1},
{1,0,0,0,2,0,3,0,0,3,2,3,0,2,0,0,0,0,0,2,3,0,0,0,0,5,5,5,5,5,2,3,2,0,0,3,0,0,3,0,0,0,0,0,3,0,0,2,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,1},
{1,0,0,3,2,0,3,0,0,2,0,3,2,0,0,0,3,3,0,0,0,0,0,2,5,5,5,5,5,6,6,3,0,2,0,3,0,2,0,0,0,2,0,0,2,0,0,0,0,0,0,0,3,3,0,0,0,2,0,0,2,2,2,1},
{1,0,0,0,0,0,0,0,0,0,2,3,2,0,0,3,0,0,2,0,0,0,2,0,5,6,5,5,5,5,5,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,2,3,0,0,0,1,2,0,0,0,0,0,0,3,1},
{1,0,2,0,0,0,2,2,3,0,0,2,0,0,0,0,0,0,0,0,0,3,3,0,5,5,5,4,5,6,5,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,2,0,0,0,0,0,0,0,3,0,0,2,0,2,1},
{1,2,0,0,2,0,1,3,0,0,0,0,0,0,2,3,3,0,0,0,2,0,2,2,5,5,5,5,5,6,5,3,3,0,0,0,0,0,0,0,0,2,0,2,2,1,3,0,0,3,0,0,0,2,0,2,2,2,0,0,0,0,0,1},
{1,0,2,2,0,0,2,3,0,3,0,0,2,0,2,3,0,0,0,2,0,0,0,0,5,5,5,5,5,5,5,0,0,0,3,0,0,3,0,2,0,2,3,0,2,3,2,0,0,0,0,2,0,0,0,0,2,0,2,2,0,0,0,1},
{1,0,0,2,2,3,2,0,2,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,6,5,5,5,5,3,0,0,3,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,2,0,0,0,2,0,0,0,3,3,0,0,0,0,1},
{1,2,2,0,0,2,0,2,0,2,0,0,0,2,0,3,2,0,2,0,0,0,2,0,3,2,2,2,0,0,3,0,0,2,2,0,0,0,2,2,0,2,2,0,0,0,0,0,3,0,2,3,0,0,0,3,0,0,3,0,3,0,3,1},
{1,0,0,2,2,0,0,0,0,0,0,2,3,0,0,0,0,2,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,2,0,3,1,0,0,0,0,3,2,2,0,0,0,0,0,2,3,0,1},
{1,2,2,0,3,0,2,3,2,0,0,0,2,0,0,2,0,2,0,0,0,2,0,2,0,0,3,0,2,2,0,0,3,0,0,2,0,0,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,0,3,0,2,2,1},
{1,0,0,0,3,0,0,0,0,3,2,0,0,2,0,2,0,0,0,2,2,3,0,3,3,0,0,2,2,0,3,0,0,2,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,3,0,2,3,0,2,0,2,0,2,0,0,0,1},
{1,3,0,0,0,0,3,0,2,0,2,0,0,0,0,3,2,3,0,0,2,0,0,0,0,0,0,0,0,0,0,3,2,0,2,0,3,0,2,3,3,2,0,0,0,0,0,3,0,0,2,0,0,0,2,2,0,0,0,3,0,0,0,1},
{1,2,3,0,0,0,0,0,0,0,3,0,0,0,2,0,2,0,0,0,0,0,0,0,2,3,0,2,0,3,0,0,0,0,0,2,0,2,0,2,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,2,3,2,0,0,2,2,1},
{1,0,0,0,2,3,2,0,0,3,0,0,0,3,3,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,2,0,0,3,0,3,0,0,0,0,0,2,0,0,0,0,3,3,2,2,0,3,0,0,0,0,0,2,0,2,0,1},
{1,2,0,3,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,0,0,2,0,3,0,3,0,0,3,0,2,2,0,3,0,2,2,0,0,3,0,2,2,0,0,3,2,0,1,0,0,3,0,0,2,3,2,2,0,0,0,1},
{1,2,2,0,2,0,2,3,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,2,0,2,0,0,3,2,0,0,3,2,0,2,0,0,0,2,2,0,0,0,0,2,0,0,0,3,0,0,1},
{1,0,0,0,2,2,0,2,0,0,0,0,2,2,0,2,0,0,0,3,0,0,3,0,0,3,0,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,3,0,0,3,3,0,0,2,2,0,0,0,2,0,0,0,2,0,3,0,3,1},
{1,3,0,2,0,0,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,3,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,3,0,2,0,0,3,0,0,0,0,0,2,0,0,2,3,0,2,3,1},
{1,0,2,2,0,0,0,3,0,0,0,0,0,2,0,0,2,0,0,2,0,2,2,2,0,3,0,0,0,0,0,0,3,0,0,2,2,2,0,0,2,0,2,0,0,0,0,0,0,0,2,2,0,2,0,0,3,0,0,0,0,0,0,1},
{1,0,0,2,3,0,3,0,3,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,3,0,0,2,3,3,2,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,1},
{1,0,0,2,1,0,0,3,0,0,2,0,0,0,0,0,0,0,0,0,3,0,2,0,0,3,3,0,0,0,0,2,0,3,0,0,0,0,0,2,0,0,0,2,0,2,2,0,0,0,3,0,0,2,0,0,3,2,2,0,3,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
};

Map::Map()
{
	grass = TextureController::LoadTexture("Images/grass.png");
	darkGrass = TextureController::LoadTexture("Images/darkGrass.png");
	water = TextureController::LoadTexture("Images/water.png");
	darkWater = TextureController::LoadTexture("Images/darkwater.png");
	tree = TextureController::LoadTexture("Images/tree.png");
	darkTree = TextureController::LoadTexture("Images/darkTree.png");
	longGrass = TextureController::LoadTexture("Images/longGrass.png");
	darkLongGrass = TextureController::LoadTexture("Images/darklongGrass.png");
	fire = TextureController::LoadTexture("Images/fire.png");
	fireGrass = TextureController::LoadTexture("Images/fireGrass.png");
	fireTree = TextureController::LoadTexture("Images/fireTree.png");
	fadedFire = TextureController::LoadTexture("Images/fadedFire.png");

	LoadMap(world);

	float zoom = 1;
	int zoomSize = 32 * zoom;

	src.x = src.y = 0;
	src.w = dest.w = zoomSize;
	src.h = dest.h = zoomSize;

	dest.x = dest.y = 0;
}


void Map::LoadMap(int arr[64][64]) {
	for (int row = 0; row < 64; row++) {
		for (int column = 0; column < 64; column++) {
			world[row][column] == arr[row][column];
		}
	}
}

void Map::DrawMap() {
	int type = 0;
	int xmoved = 16; //MOVE ELSEWHERE
	int ymoved = 35; //MOVE ELSEWHERE
	for (int row = ymoved; row < (64+ymoved); row++) { 
		for (int column = xmoved; column < (64+xmoved); column++) {

			type = world[row][column];

			float zoom = 1;
			int zoomSize = 32 * zoom;

			dest.x = (column - xmoved) * zoomSize; //zoomSize;
			dest.y = (row-ymoved) * zoomSize;


			bool night = false;
			//bool night = true;

			

			switch (type) {
			case 0: //renders the grass texture
				if (night){
					TextureController::Draw(darkGrass, src, dest);
				}
				else {
					TextureController::Draw(grass, src, dest);
				}
				break;
			case 1: //renders the water
				if (night) {
					TextureController::Draw(darkWater, src, dest);
				}
				else {
					TextureController::Draw(water, src, dest);
				}
				break;
			case 2: //renders any trees
				//TextureController::Draw(tree, src, dest);
				if (night) {
					TextureController::Draw(darkTree, src, dest);
				}
				else {
					TextureController::Draw(tree, src, dest);
				}
				break;
			case 3: //renders the long grass
				//TextureController::Draw(longGrass, src, dest);
				if (night) {
					TextureController::Draw(darkLongGrass, src, dest);
				}
				else {
					TextureController::Draw(longGrass, src, dest);
				}
				break;
			case 4:
				if (night) {
					TextureController::Draw(fire, src, dest);
				}
				else {
					TextureController::Draw(fadedFire, src, dest);
				}
				break;
			case 5:
				if (night) {
					TextureController::Draw(fireGrass, src, dest);
				}
				else {
					TextureController::Draw(grass, src, dest);
				}
				break;
			case 6:
				if (night) {
					TextureController::Draw(fireTree, src, dest);
				}
				else {
					TextureController::Draw(tree, src, dest);
				}
				break;			
			default:
				break;
			}
		}
	}
}

Map::~Map()
{
}
